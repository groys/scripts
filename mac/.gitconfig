[color]
  diff = auto
  status = auto
  branch = auto

[alias]
  br = branch -v
  co = checkout
  ci = commit
  di = diff
  st = status
  lop = log --pretty=oneline
  fm = format-patch
  cp = cherry-pick
  lf = log --pretty=short --name-only
  # Show the commits and content in this branch
  showbr = log --pretty=oneline trunk..
  showallbr = log -U trunk ..
  amd = commit -a --amend
  # Commit changes to current head as amended commit
  amdi = commit -a --amend -C HEAD
  # Change the HEAD commit message to the template and edit
  amdc = !git commit --amend -eF `git config commit.template`
  # Safe remove all branches reachable from HEAD.  Good way to GC old branches after dcommit/rebase
  gcbr = !git branch --no-track --no-color --merged | sed 's/[ *]*//' | xargs -n1 git branch -d &> /dev/null || exit 0
  # Spellcheck your commit message
  aspell = !git log --pretty=format:%s%n%n%b -n1 > /tmp/aspell.txt && aspell -c /tmp/aspell.txt && git commit --amend -F /tmp/aspell.txt
  # Commit changes on *top* of current head as a checkpoint commit
  cap = commit -am 'cp'
  # Grep with color and line numbers
  gr = grep --color -n
  #unstage
  unstage = reset HEAD --
  #throw away changes to file

[svn]
  followparent = true

# Dear god, please change these if you borrow my gitconfig
[user]
  name  = groys
	email = groys@fb.com
[commit]
	template =/Users/groys/Code/git-commit-template.txt

[push]
  default = tracking

# Show a log of '56 minutes ago' rather than 'November 12, 2008 12:34:53'
[log]
date = relative

[core]
	editor = vim
	excludesfile = /Users/groys/.gitignore_global
[merge]
	tool = vimdiff
